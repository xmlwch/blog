<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PHP on xmlwch的博客</title>
    <link>https://blog.xmlwch.cn/categories/PHP/</link>
    <description>Recent content in PHP on xmlwch的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 30 Jul 2021 14:30:00 +0800</lastBuildDate><atom:link href="https://blog.xmlwch.cn/categories/PHP/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PHP中数学相关的函数</title>
      <link>https://blog.xmlwch.cn/2021/07/30/php/math-func.html</link>
      <pubDate>Fri, 30 Jul 2021 14:30:00 +0800</pubDate>
      
      <guid>https://blog.xmlwch.cn/2021/07/30/php/math-func.html</guid>
      <description>函数 作用 用法 abs( ) 绝对值 abs(mixed $number): number 返回参数 number 的绝对值。 acos( ) 反余弦 acos(float $arg): float 返回 arg 的反余弦值，单位是弧度。acos() 是 cos() 的反函数，它的意思是在 acos() 范围里的每个值都是 a==cos(acos(a)) 。 acosh( ) 反双曲余弦 acosh(float $arg): float 返回 arg 的反双曲余弦值，即，其双曲余弦为 arg 的那个值。 asin( ) 反正弦 asin(float $arg): float 返回 arg 的反正弦值，单位是弧度。asin</description>
    </item>
    
    <item>
      <title>[转]PHP规范PSR-0和PSR-4的理解</title>
      <link>https://blog.xmlwch.cn/2021/07/28/php/psr0-and-psr4.html</link>
      <pubDate>Wed, 28 Jul 2021 20:00:00 +0800</pubDate>
      
      <guid>https://blog.xmlwch.cn/2021/07/28/php/psr0-and-psr4.html</guid>
      <description>一、PSR0简介 下文描述了若要使用一个通用的自动加载器(autoloader)，你所需要遵守的规范： 一个完全标准的命名空间(namespace)和类(class)的结构是这样的：\&amp;lt;Vendor Name&amp;gt;\(&amp;lt;Namespace&amp;gt;\)*&amp;lt;Class Name&amp;gt; 每个命名空间(namespace)都必须有一个顶级的空间名(namespac</description>
    </item>
    
    <item>
      <title>Composer命令</title>
      <link>https://blog.xmlwch.cn/2021/07/28/php/composer.html</link>
      <pubDate>Wed, 28 Jul 2021 16:00:00 +0800</pubDate>
      
      <guid>https://blog.xmlwch.cn/2021/07/28/php/composer.html</guid>
      <description>composer是PHP的包管理、包依赖关系管理工具，有了它，我们就很轻松一个命令就可以把他人优秀的代码用到我们的项目中来，而且很容易管理依赖关系，更新删除等操作也很轻易的实现。 1 显示可用命令 composer composer list 2 查看当前镜像源 composer config -l -g [repositories.packagist.org.type] composer [repositories.packagist.org.url] https://packagist.org # 或者 composer config -g repo {&amp;#34;packagist.org&amp;#34;:{&amp;#34;type&amp;#34;:&amp;#34;composer&amp;#34;,&amp;#34;url&amp;#34;:&amp;#34;https://packagist.org&amp;#34;}} 3 配置镜像源 # 删除镜像 composer config -g --unset repos.packagist #</description>
    </item>
    
    <item>
      <title>PHP常用正则验证</title>
      <link>https://blog.xmlwch.cn/2021/07/27/php/regexp.html</link>
      <pubDate>Tue, 27 Jul 2021 16:00:00 +0800</pubDate>
      
      <guid>https://blog.xmlwch.cn/2021/07/27/php/regexp.html</guid>
      <description>正则表达式在匹配字符串时，遵循以下2个基本原则： 1.最左原则：正则表达式总是从目标字符串的最左侧开始，依次匹配，直到匹配到符合表达式要求的部分，或直到匹配目标字符串的结束。 2.最长原则：对于匹配到的目标字符串，正则表达式总是会匹配到符合正则表达式要求的最长的部分 正则验证手机号 //</description>
    </item>
    
    <item>
      <title>[转]PHPWord中文手册整理</title>
      <link>https://blog.xmlwch.cn/2021/07/26/php/phpword.html</link>
      <pubDate>Mon, 26 Jul 2021 12:00:00 +0800</pubDate>
      
      <guid>https://blog.xmlwch.cn/2021/07/26/php/phpword.html</guid>
      <description>修正 中文支持的问题，使用前如果发现乱码，需要进行一些修正： 解决编码问题，PHPword 会对输入的文字进行utf8_encode编码转化，如果你使用GBK、GB2312或者utf8编码的话就会出现乱码，如果你用utf8编码，就查找类库中所有方法中的 utf8_encode 转码将其删除，如果你采用GBK或</description>
    </item>
    
    <item>
      <title>PHP Session浅析</title>
      <link>https://blog.xmlwch.cn/2021/06/28/php/session.html</link>
      <pubDate>Mon, 28 Jun 2021 16:00:00 +0800</pubDate>
      
      <guid>https://blog.xmlwch.cn/2021/06/28/php/session.html</guid>
      <description>缘由 配合客户做一个免密登录跳转接口，因为双方均采用独立的php环境，且部署在一台服务器上。出现了先登录我方系统后不可登录对方系统，先登录对方系统后登录不了我方系统，怀疑为会话机制出现问题。故重新梳理Session会话机制。 声明与使用 Session的设置不同于Cookie，必须先启</description>
    </item>
    
  </channel>
</rss>
